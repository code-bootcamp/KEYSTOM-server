# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProductImage {
  id: String!
  url: String!
  isThumbnail: Boolean!
}

type Product {
  id: String!
  title: String!
  description: String!
  price: Int!
  createdAt: DateTime!
  deletedAt: DateTime!
  thumbnail: String!
  productTags: [ProductTag!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductTag {
  id: String!
  tag: String!
  products: [Product!]!
}

type Custom {
  id: String!
  space: Int!
  enter: Int!
  esc: Int!
  rest: Int!
  product: Product!
}

type Coupon {
  id: String!
  discountPrice: Int!
  couponName: String!
}

type UserCoupon {
  id: String!
  email: User!
  coupon: Coupon!
  isEvent: Boolean!
  createdAt: DateTime!
}

type User {
  email: String!
  name: String!
  nickName: String!
  profileImage: String!
  isAdmin: Boolean!
}

type Address {
  id: String!
  address: String!
  addressDetail: String!
  zipCode: String!
  createdAt: String!
  user: User!
}

type Order {
  id: String!
  count: Int!
  price: Int!
  receiverName: String!
  receiverPhone: String!
  address: Address!
  user: String!
  product: Product!
  createdAt: DateTime!
  isReview: Boolean!
}

type Review {
  id: String!
  title: String!
  description: String!
  like: Int!
  thumbnail: String
  createdAt: String!
  product: Product!
  user: User!
  order: Order!
}

type ReviewImage {
  id: String!
  url: String!
  isThumbnail: Boolean!
}

type Payment {
  id: String!
  price: Int!
  status: PAYMENT_STATUS_ENUM!
  impUid: String!
  order: String!
  user: String!
  createdAt: DateTime!
}

enum PAYMENT_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type Comment {
  id: Int!
  commentContent: String!
  parentId: String!
  createdAt: String!
}

type Query {
  fetchUserAddress(email: String!): Address!
  fetchAddresses: [Address!]!
  fetchUserLoggedIn: Address!
  fetchComments: [Comment!]!
  fetchComment(commentId: String!): Comment!
  fetchReComments(reviewId: String!, commentId: Float!): [Comment!]!
  fetchUserComments(email: String!): [Comment!]!
  fetchReviewComments(reviewId: String!): [Comment!]!
  fetchCoupons: [Coupon!]!
  fetchCoupon(couponId: String!): Coupon!
  fetchCustoms: [Custom!]!
  fetchCustom(productId: String!): Custom!
  fetchOrders(page: Float): [Order!]!
  fetchOrder(orderId: String!): Order!
  searchProducts(search: String, price: Float): [Product!]!
  fetchProducts(page: Float): [Product!]!
  fetchProduct(productId: String!): Product!
  fetchProductImages(productId: String!): [ProductImage!]!
  fetchProductRowCount: Int!
  fetchReview(reviewId: String!): Review!
  fetchBestReview: [Review!]!
  fetchReviews(page: Float, productId: String!): [Review!]!
  fetchReviewImages(reviewId: String!): [ReviewImage!]!
  fetchReviewRowCount: Int!
  fetchUserReview(email: String!): [Review!]!
  fetchUsers: [User!]!
  fetchUser(email: String!): User!
  fetchUserHaveCoupons: [UserCoupon!]!
}

type Mutation {
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  deleteAddress(addressId: String!): String!
  login(email: String!, password: String!): String!
  logintest(email: String!, password: String!): String!
  restoreAccessToken: String!
  logout: String!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  createReComment(commentId: Float!, createCommentInput: CreateCommentInput!): Comment!
  deleteComment(commentId: Float!): String!
  createCoupon(createCouponInput: CreateCouponInput!): Coupon!
  deleteCoupon(couponId: String!): String!
  createCustom(createCustomInput: CreateCustomInput!): Custom!
  uploadFile(files: [Upload!]!): [String!]!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  payment(price: Float!, impUid: String!, createAddressInput: CreateAddressInput!, createOrderInput: CreateOrderInput!): Payment!
  refund(impUid: String!, paymentId: String!, createAddressInput: CreateAddressInput!, createOrderInput: CreateOrderInput!): Payment!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductInput: UpdateProductInput!): Product!
  deleteProduct(productId: String!): String!
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  deleteReview(reviewId: String!): String!
  likeUp(reviewId: String!): Int!
  sendToken(phone: String!): String!
  checkToken(token: String!): String!
  checkEmail(email: String!): String!
  createUser(createUserInput: CreateUserInput!): User!
  deleteUser(email: String!): String!
  updateUser(email: String!, updateUserInput: UpdateUserInput!): User!
  createEventCoupon: UserCoupon!
  createUserCoupon(createUserCouponInput: CreateUserCouponInput!): UserCoupon!
  useCoupon(couponId: String!): String!
}

input CreateAddressInput {
  address: String!
  addressDetail: String!
  zipCode: String!
}

input UpdateAddressInput {
  address: String!
  addressDetail: String!
  zipCode: String!
  email: String!
}

input CreateCommentInput {
  commentContent: String!
  email: String!
  reviewId: String!
}

input CreateCouponInput {
  discountPrice: Int!
  couponName: String!
}

input CreateCustomInput {
  space: Int!
  enter: Int!
  esc: Int!
  rest: Int!
  productId: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateOrderInput {
  count: Int!
  price: Int!
  receiverName: String!
  receiverPhone: String!
  productId: String!
}

input CreateProductInput {
  title: String!
  description: String!
  price: Int!
  imageUrls: [String!]
  productTags: [String!]
}

input UpdateProductInput {
  title: String!
  description: String!
  price: Int!
  imageUrls: [String!]!
  productTags: [String!]
}

input CreateReviewInput {
  title: String!
  description: String!
  imageUrls: [String!]
  orderId: String!
}

input UpdateReviewInput {
  title: String!
  description: String!
  imageUrls: [String!]
  reviewId: String!
}

input CreateUserInput {
  email: String!
  password: String!
  name: String!
  nickName: String!
  address: CreateAddressInput!
}

input UpdateUserInput {
  name: String!
  nickName: String!
}

input CreateUserCouponInput {
  email: String!
  couponId: String!
}